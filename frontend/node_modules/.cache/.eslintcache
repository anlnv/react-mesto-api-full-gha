[{"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\index.js":"1","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\App.js":"3","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Main.js":"4","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\PopupWithForm.js":"5","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Header.js":"6","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\EditProfilePopup.js":"7","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\ProtectedRoute.js":"8","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Footer.js":"9","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\ImagePopup.js":"10","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\InfoTooltip.js":"11","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\AddPlacePopup.js":"12","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Login.js":"13","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\EditAvatarPopup.js":"14","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\utils\\Auth.js":"15","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Register.js":"16","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\utils\\Api.js":"17","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\context\\CurrentUserContext.js":"18","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\AuthForm.js":"19","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Card.js":"20"},{"size":403,"mtime":1691095199850,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1691095199851,"results":"23","hashOfConfig":"22"},{"size":8186,"mtime":1691145411207,"results":"24","hashOfConfig":"22"},{"size":2012,"mtime":1691095199812,"results":"25","hashOfConfig":"22"},{"size":1085,"mtime":1691095199812,"results":"26","hashOfConfig":"22"},{"size":1385,"mtime":1691095199811,"results":"27","hashOfConfig":"22"},{"size":2008,"mtime":1691095199810,"results":"28","hashOfConfig":"22"},{"size":267,"mtime":1691095199813,"results":"29","hashOfConfig":"22"},{"size":197,"mtime":1691095199810,"results":"30","hashOfConfig":"22"},{"size":712,"mtime":1691095199811,"results":"31","hashOfConfig":"22"},{"size":1250,"mtime":1691095199811,"results":"32","hashOfConfig":"22"},{"size":1211,"mtime":1691095199809,"results":"33","hashOfConfig":"22"},{"size":411,"mtime":1691095199812,"results":"34","hashOfConfig":"22"},{"size":978,"mtime":1691095199810,"results":"35","hashOfConfig":"22"},{"size":1104,"mtime":1691095199852,"results":"36","hashOfConfig":"22"},{"size":462,"mtime":1691095199813,"results":"37","hashOfConfig":"22"},{"size":3671,"mtime":1691142098015,"results":"38","hashOfConfig":"22"},{"size":84,"mtime":1691095199814,"results":"39","hashOfConfig":"22"},{"size":3697,"mtime":1691095199809,"results":"40","hashOfConfig":"22"},{"size":1456,"mtime":1691095199810,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"la2hu6",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\index.js",[],[],[],"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\App.js",["106"],[],"import Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport { useState, useEffect } from 'react';\r\nimport { Route, Routes, useNavigate } from 'react-router-dom';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext';\r\nimport { api } from '../utils/Api';\r\n\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport InfoTooltip from \"./InfoTooltip\";\r\nimport { authorization, register, checkToken } from '../utils/Auth';\r\n\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\r\n\r\n  const [selectedCard, setSelectedCard] = useState({ name: \"\", link: \"\" });\r\n  const [currentUser, setCurrentUser] = useState({\r\n    name: \" \",\r\n    about: \" \",\r\n    avatar: \" \",\r\n    _id: \" \",\r\n  });\r\n  const [cards, setCards] = useState([]);\r\n\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [registrated, setRegistrated] = useState(false);\r\n  const [userEmail, setUserEmail] = useState(\"email@yandex.ru\");\r\n  const [authorizationData, setAuthorizationData] = useState({\r\n    password: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const tokenCheck = () => {\r\n    const jwt = localStorage.getItem(\"jwt\");\r\n    checkToken(jwt)\r\n      .then((response) => {\r\n        setUserEmail(response.email);\r\n        setLoggedIn(true);\r\n      }).then(() => navigate(\"/\"))\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    tokenCheck();\r\n    api\r\n      .getUserInfoFromServer()\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    api.getInitialCards()\r\n      .then((res) => {\r\n        setCards(res);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n\r\n  const logOut = () => {\r\n    localStorage.removeItem(\"jwt\");\r\n    setLoggedIn(false);\r\n    navigate('/sign-in');\r\n  }\r\n\r\n  const handleLogin = () => {\r\n    const { password, email } = authorizationData;\r\n    authorization(password, email)\r\n      .then((response) => {\r\n        if (response.token) {\r\n          localStorage.setItem(\"jwt\", response.token);\r\n          setUserEmail(email);\r\n          setLoggedIn(true);\r\n          api\r\n            .getUserInfoFromServer()\r\n            .then((res) => {\r\n              setCurrentUser(res);\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n\r\n          api.getInitialCards()\r\n            .then((res) => {\r\n              setCards(res);\r\n            })\r\n            .catch(err => console.log(err));\r\n          navigate(\"/\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        setAuthorizationData({ password: \"\", email: \"\" });\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    setRegistrated(false);\r\n    const { password, email } = authorizationData;\r\n    register(password, email)\r\n      .then((response) => {\r\n        if (response.email) {\r\n          setRegistrated(true);\r\n          navigate(\"/sign-in\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        setAuthorizationData({ password: \"\", email: \"\" });\r\n      })\r\n      .catch((err) => console.error(err))\r\n      .finally(() => setIsInfoTooltipOpen(true));\r\n  };\r\n\r\n  const handleChangeInput = (event) => {\r\n    const { name, value } = event.target;\r\n    setAuthorizationData((data) => ({\r\n      ...data,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(i => i === currentUser._id);\r\n\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    api\r\n      .deleteCard(card._id)\r\n      .then(() => {\r\n        setCards((cards) => cards.filter((item) => item._id !== card._id));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n  const handleEditAvatarClick = () => {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n  const handleEditProfileClick = () => {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n  const handleAddPlaceClick = () => {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  const closeAllPopups = () => {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setSelectedCard({ name: \"\", link: \"\" });\r\n    setIsInfoTooltipOpen(false);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard({ name: card.name, link: card.link });\r\n  }\r\n\r\n  const handleUpdateUser = (user) => {\r\n    api\r\n      .setUserInfo(user)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n      })\r\n      .then(() => closeAllPopups())\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleUpdateAvatar = (avatar) => {\r\n    api\r\n      .editAvatar(avatar)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n      })\r\n      .then(() => closeAllPopups())\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleAddPlaceSubmit = ({ name, link }) => {\r\n    api\r\n      .addNewCard({ name, link })\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n      })\r\n      .then(() => closeAllPopups())\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div className='page'>\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <Header userEmail={userEmail} onSignOut={logOut} />\r\n        <Routes >\r\n\r\n          <Route\r\n            path='/sign-up'\r\n            element={\r\n              <Register\r\n                onRegister={handleRegister}\r\n                passowrdInput={authorizationData.password}\r\n                emailInput={authorizationData.email}\r\n                handleChangeInput={handleChangeInput}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path='/sign-in'\r\n            element={\r\n              <Login\r\n                onLogin={handleLogin}\r\n                passowrdInput={authorizationData.password}\r\n                emailInput={authorizationData.email}\r\n                handleChangeInput={handleChangeInput}\r\n              />\r\n            }\r\n          />\r\n          <Route path=\"/\" element={<ProtectedRoute cards={cards} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick}\r\n            onCardClick={handleCardClick} onCardLike={handleCardLike} onCardDelete={handleCardDelete} loggedIn={loggedIn} element={Main} />} />\r\n\r\n        </Routes>\r\n\r\n        {loggedIn && <Footer />}\r\n\r\n\r\n\r\n\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n\r\n        <PopupWithForm name=\"delete\" title=\"Вы уверены?\" btnText=\"Да\" onClose={closeAllPopups} />\r\n\r\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\r\n\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n\r\n        <InfoTooltip\r\n          name=\"info\"\r\n          containerType=\"infoTooltip\"\r\n          isOpen={isInfoTooltipOpen}\r\n          onClose={closeAllPopups}\r\n          isOk={registrated}\r\n        />\r\n\r\n      </CurrentUserContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Main.js",["107","108","109"],[],"import editBtn from '../images/avatar-edit.svg';\r\nimport addBtn from '../images/add-button.svg';\r\nimport { api } from '../utils/Api';\r\nimport { useEffect, useState, useContext } from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n\r\n    \r\n    const currentUser = useContext(CurrentUserContext);\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__personal\">\r\n                    <button className=\"profile__button-edit\" type=\"button\" onClick={props.onEditAvatar}></button>\r\n                    <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"фото профиля\" />\r\n                    <div className=\"profile__info\">\r\n                        <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                        <button type=\"button\" className=\"profile__edit-button\" onClick={props.onEditProfile}>\r\n                            <img className=\"profile__edit-button-img\" src={editBtn} alt=\"кнопка редактирования\" />\r\n                        </button>\r\n                        <p className=\"profile__about\">{currentUser.about}</p>\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}>\r\n                    <img className=\"profile__add-button-img\" src={addBtn} alt=\"кнопка добавления\" />\r\n                </button>\r\n            </section>\r\n            <section className=\"elements\">\r\n                <ul className=\"elements__table\">\r\n                     { props.cards.map((card)=>(\r\n                       <Card key={card._id} card={card} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/>\r\n                     ))\r\n                     }\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\PopupWithForm.js",[],[],"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Header.js",[],[],"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\EditProfilePopup.js",[],[],"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\ProtectedRoute.js",["110"],[],"import React from \"react\";\r\nimport { Route, Navigate } from \"react-router-dom\";\r\n\r\nexport default function ProtectedRoute({element: Component, ...props}){\r\n  return(\r\n       props.loggedIn ? <Component {...props}/> : <Navigate to=\"/sign-in\" replace />\r\n      \r\n  )\r\n}","C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Footer.js",[],[],"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\ImagePopup.js",[],[],"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\InfoTooltip.js",[],[],"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\AddPlacePopup.js",[],[],"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Login.js",[],[],"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\EditAvatarPopup.js",[],[],"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\utils\\Auth.js",[],[],"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Register.js",[],[],"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\utils\\Api.js",[],[],"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\context\\CurrentUserContext.js",[],[],"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\AuthForm.js",[],[],"C:\\Users\\User\\dev\\react-mesto-api-full-gha\\react-mesto-api-full-gha\\frontend\\src\\components\\Card.js",[],[],{"ruleId":"111","severity":1,"message":"112","line":72,"column":6,"nodeType":"113","endLine":72,"endColumn":8,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":3,"column":10,"nodeType":"117","messageId":"118","endLine":3,"endColumn":13},{"ruleId":"115","severity":1,"message":"119","line":4,"column":10,"nodeType":"117","messageId":"118","endLine":4,"endColumn":19},{"ruleId":"115","severity":1,"message":"120","line":4,"column":21,"nodeType":"117","messageId":"118","endLine":4,"endColumn":29},{"ruleId":"115","severity":1,"message":"121","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":15},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["122"],"no-unused-vars","'api' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Route' is defined but never used.",{"desc":"123","fix":"124"},"Update the dependencies array to be: [tokenCheck]",{"range":"125","text":"126"},[2288,2290],"[tokenCheck]"]