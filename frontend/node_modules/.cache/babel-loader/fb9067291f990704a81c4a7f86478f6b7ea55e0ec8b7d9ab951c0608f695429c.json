{"ast":null,"code":"//export const BASE_URL = 'https://auth.nomoreparties.co.';\nexport const BASE_URL = 'http://localhost:3001';\nconst checkResponse = res => {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n};\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => checkResponse(res));\n};\nexport const authorization = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => checkResponse(res));\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => checkResponse(res));\n};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorization","checkToken","token"],"sources":["C:/Users/User/dev/react-mesto-api-full-gha/react-mesto-api-full-gha/frontend/src/utils/Auth.js"],"sourcesContent":["//export const BASE_URL = 'https://auth.nomoreparties.co.';\r\nexport const BASE_URL = 'http://localhost:3001';\r\n\r\n const checkResponse = (res) => {\r\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)\r\n}\r\n\r\nexport const register = (password, email) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({password, email }),\r\n    })\r\n      .then(res => checkResponse(res));\r\n  };\r\n  \r\n\r\n  export const authorization = (password, email) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ password, email }),\r\n    })\r\n    .then(res => checkResponse(res));\r\n  };\r\n\r\n  export const checkToken = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`,\r\n      },\r\n    })\r\n    .then(res => checkResponse(res));\r\n  };"],"mappings":"AAAA;AACA,OAAO,MAAMA,QAAQ,GAAG,uBAAuB;AAE9C,MAAMC,aAAa,GAAIC,GAAG,IAAK;EAC5B,OAAOA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;AACxE,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EACzC,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,QAAQ;MAAEC;IAAM,CAAC;EACzC,CAAC,CAAC,CACCO,IAAI,CAACf,GAAG,IAAID,aAAa,CAACC,GAAG,CAAC,CAAC;AACpC,CAAC;AAGD,OAAO,MAAMgB,aAAa,GAAGA,CAACT,QAAQ,EAAEC,KAAK,KAAK;EAChD,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC,CACDO,IAAI,CAACf,GAAG,IAAID,aAAa,CAACC,GAAG,CAAC,CAAC;AAClC,CAAC;AAED,OAAO,MAAMiB,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOT,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IACnCY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASO,KAAM;IACnC;EACF,CAAC,CAAC,CACDH,IAAI,CAACf,GAAG,IAAID,aAAa,CAACC,GAAG,CAAC,CAAC;AAClC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}