{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      url\n    } = _ref;\n    this._baseUrl = url;\n  }\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getUserInfoFromServer() {\n    return fetch(this._baseUrl + '/users/me', {\n      method: \"GET\",\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-type': 'application/json'\n      }\n    }).then(res => this._checkResponse(res));\n  }\n  getInitialCards() {\n    return fetch(this._baseUrl + '/cards', {\n      method: \"GET\",\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-type': 'application/json'\n      }\n    }).then(res => this._checkResponse(res));\n  }\n  setUserInfo(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    return fetch(this._baseUrl + '/users/me', {\n      method: 'PATCH',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  addNewCard(_ref3) {\n    let {\n      name,\n      link\n    } = _ref3;\n    return fetch(this._baseUrl + '/cards', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-type': 'application/json'\n      }\n    }).then(res => this._checkResponse(res));\n  }\n  changeLikeCardStatus(id, like) {\n    if (like) {\n      return fetch(this._baseUrl + '/cards/' + id + '/likes', {\n        method: \"PUT\",\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n          'Content-type': 'application/json'\n        }\n      }).then(res => this._checkResponse(res));\n    } else {\n      return fetch(this._baseUrl + '/cards/' + id + '/likes', {\n        method: \"DELETE\",\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n          'Content-type': 'application/json'\n        }\n      }).then(res => this._checkResponse(res));\n    }\n  }\n  editAvatar(_ref4) {\n    let {\n      avatar\n    } = _ref4;\n    return fetch(this._baseUrl + '/users/me/avatar', {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => this._checkResponse(res));\n  }\n}\n\n/*export const api = new Api({url: 'https://nomoreparties.co/v1/cohort-64', \r\n  headers: {authorization: '570bd9e5-c82e-4063-b8fe-13df3632c8f9', 'Content-Type': 'application/json'}\r\n});*/\n\nexport const api = new Api({\n  url: 'http://localhost:3001'\n});","map":{"version":3,"names":["Api","constructor","_ref","url","_baseUrl","_checkResponse","res","ok","json","Promise","reject","status","getUserInfoFromServer","fetch","method","headers","localStorage","getItem","then","getInitialCards","setUserInfo","_ref2","name","about","body","JSON","stringify","addNewCard","_ref3","link","deleteCard","id","changeLikeCardStatus","like","editAvatar","_ref4","avatar","_headers","api"],"sources":["C:/Users/User/dev/react-mesto-api-full-gha/react-mesto-api-full-gha/frontend/src/utils/Api.js"],"sourcesContent":["class Api {\r\n    constructor({ url }) {\r\n        this._baseUrl = url;\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)\r\n    }\r\n\r\n    getUserInfoFromServer() {\r\n        return fetch(this._baseUrl + '/users/me', {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\r\n                'Content-type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => this._checkResponse(res))\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(this._baseUrl + '/cards', {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\r\n                'Content-type': 'application/json'\r\n            },\r\n        })\r\n            .then(res => this._checkResponse(res))\r\n    }\r\n\r\n    setUserInfo({ name, about }) {\r\n        return fetch(this._baseUrl + '/users/me', {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                about\r\n            })\r\n        })\r\n            .then(res => this._checkResponse(res))\r\n    }\r\n\r\n    addNewCard({ name, link }) {\r\n        return fetch(this._baseUrl + '/cards', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                link\r\n            })\r\n        })\r\n            .then(res => this._checkResponse(res))\r\n    }\r\n\r\n    deleteCard(id) {\r\n        return fetch(`${this._baseUrl}/cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n              'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\r\n              'Content-type': 'application/json'\r\n            },\r\n        })\r\n            .then(res => this._checkResponse(res))\r\n    }\r\n\r\n    changeLikeCardStatus(id, like) {\r\n        if (like) {\r\n            return fetch(this._baseUrl + '/cards/' + id + '/likes', {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\r\n                    'Content-type': 'application/json'\r\n                  },  \r\n            })\r\n                .then(res => this._checkResponse(res))\r\n        } else {\r\n            return fetch(this._baseUrl + '/cards/' + id + '/likes', {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\r\n                    'Content-type': 'application/json'\r\n                  },\r\n            })\r\n                .then(res => this._checkResponse(res))\r\n        }\r\n    }\r\n\r\n    editAvatar({ avatar }) {\r\n        return fetch(this._baseUrl + '/users/me/avatar', {\r\n            method: \"PATCH\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar\r\n            })\r\n        })\r\n            .then(res => this._checkResponse(res))\r\n    }\r\n}\r\n\r\n/*export const api = new Api({url: 'https://nomoreparties.co/v1/cohort-64', \r\n  headers: {authorization: '570bd9e5-c82e-4063-b8fe-13df3632c8f9', 'Content-Type': 'application/json'}\r\n});*/\r\n\r\n\r\nexport const api = new Api({ url: 'http://localhost:3001' });"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}