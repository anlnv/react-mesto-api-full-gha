{"ast":null,"code":"//export const BASE_URL = 'https://auth.nomoreparties.co.';\nexport var BASE_URL='http://localhost:3001';var checkResponse=function checkResponse(res){return res.ok?res.json():Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));};export var register=function register(password,email){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(function(res){return checkResponse(res);});};export var authorization=function authorization(password,email){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(function(res){return checkResponse(res);});};export var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}}).then(function(res){return checkResponse(res);});};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","concat","status","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorization","checkToken","token"],"sources":["C:/Users/User/dev/react-mesto-api-full-gha/react-mesto-api-full-gha/frontend/src/utils/Auth.js"],"sourcesContent":["//export const BASE_URL = 'https://auth.nomoreparties.co.';\r\nexport const BASE_URL = 'http://localhost:3001';\r\n\r\n const checkResponse = (res) => {\r\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)\r\n}\r\n\r\nexport const register = (password, email) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({password, email }),\r\n    })\r\n      .then(res => checkResponse(res));\r\n  };\r\n  \r\n\r\n  export const authorization = (password, email) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ password, email }),\r\n    })\r\n    .then(res => checkResponse(res));\r\n  };\r\n\r\n  export const checkToken = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`,\r\n      },\r\n    })\r\n    .then(res => checkResponse(res));\r\n  };"],"mappings":"AAAA;AACA,MAAO,IAAM,CAAAA,QAAQ,CAAG,uBAAuB,CAE9C,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIC,GAAG,CAAK,CAC5B,MAAO,CAAAA,GAAG,CAACC,EAAE,CAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAGC,OAAO,CAACC,MAAM,0CAAAC,MAAA,CAAYL,GAAG,CAACM,MAAM,CAAE,CAAC,CACxE,CAAC,CAED,MAAO,IAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,QAAQ,CAAEC,KAAK,CAAK,CACzC,MAAO,CAAAC,KAAK,IAAAL,MAAA,CAAIP,QAAQ,YAAW,CACjCa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACP,QAAQ,CAARA,QAAQ,CAAEC,KAAK,CAALA,KAAM,CAAC,CACzC,CAAC,CAAC,CACCO,IAAI,CAAC,SAAAhB,GAAG,QAAI,CAAAD,aAAa,CAACC,GAAG,CAAC,GAAC,CACpC,CAAC,CAGD,MAAO,IAAM,CAAAiB,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIT,QAAQ,CAAEC,KAAK,CAAK,CAChD,MAAO,CAAAC,KAAK,IAAAL,MAAA,CAAIP,QAAQ,YAAW,CACjCa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,QAAQ,CAARA,QAAQ,CAAEC,KAAK,CAALA,KAAM,CAAC,CAC1C,CAAC,CAAC,CACDO,IAAI,CAAC,SAAAhB,GAAG,QAAI,CAAAD,aAAa,CAACC,GAAG,CAAC,GAAC,CAClC,CAAC,CAED,MAAO,IAAM,CAAAkB,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,KAAK,CAAK,CACnC,MAAO,CAAAT,KAAK,IAAAL,MAAA,CAAIP,QAAQ,cAAa,CACnCa,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,WAAAP,MAAA,CAAYc,KAAK,CAClC,CACF,CAAC,CAAC,CACDH,IAAI,CAAC,SAAAhB,GAAG,QAAI,CAAAD,aAAa,CAACC,GAAG,CAAC,GAAC,CAClC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}